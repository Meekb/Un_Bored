{"version":3,"sources":["components/Activity/Activity.js","components/Form/Form.js","images/homeIcon.svg","components/Header/Header.js","components/Saved/Saved.js","components/Showcase/Showcase.js","apiCalls.js","components/App/App.js","index.js"],"names":["Activity","activity","id","type","participants","price","accessibility","savedView","setSavedView","search","sendToSaved","suggestedActivity","length","className","toFixed","display","options","displayAccessibility","to","onClick","e","preventDefault","infoToSave","key","saveActivityInfo","Form","generateActivity","setSearchCategory","useState","category","setCategory","useEffect","onChange","target","value","default","submitSearch","Header","setSearch","setShowcaseView","style","textDecoration","src","homeIcon","alt","Saved","checkSavedView","completeActivity","deleteActivity","savedActivities","showcaseView","savedActs","map","Showcase","showcasedActivities","completedCards","card","dateCompleted","fetchActivity","endpoint","a","fetch","response","checkForError","ok","console","log","json","Error","App","setSavedActivities","setShowcasedActivities","searchCategory","setSuggestedActivity","setError","loading","setLoading","endpath","undefined","then","activityData","catch","error","message","newActivity","find","saved","newSavedArr","filter","convertDate","completedActivity","dateToFormat","Date","toString","split","path","render","exact","router","ReactDOM","document","getElementById"],"mappings":"qVAIaA,EAAW,SAAC,GAAiI,IAA/HC,EAA8H,EAA9HA,SAAUC,EAAoH,EAApHA,GAAIC,EAAgH,EAAhHA,KAAMC,EAA0G,EAA1GA,aAAcC,EAA4F,EAA5FA,MAAOC,EAAqF,EAArFA,cAAeC,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,kBAgE/H,OAAiC,IAA7BA,EAAkBC,QAAgBH,EAElC,yBAASI,UAAU,SAAnB,SACE,mBAAGA,UAAU,SAAb,iDAMJ,yBAASA,UAAU,qBAAnB,SAEMJ,IAAWF,EACb,sBAAKM,UAAU,gBAAf,UACE,qBAAIA,UAAU,QAAd,UAAuBZ,EAAvB,OACA,oBAAGY,UAAU,WAAb,uBAAmCV,KACnC,oBAAGU,UAAU,eAAb,2BAA2CT,KAChC,IAAVC,EAAc,mBAAGQ,UAAU,OAAb,mCAAgD,oBAAGA,UAAU,OAAb,+BAA+C,GAARR,GAAYS,QAAQ,MAhErG,SAACR,GAE5B,IAAIS,EAEEC,EACE,+BADFA,EAEE,2EAFFA,EAGM,gEAHNA,EAII,0BAJJA,EAKE,2BALFA,EAMO,qDANPA,EAOW,6CAGjB,OAAQV,GACN,KAAK,EACHS,EAAUC,EACV,MACF,IAAK,GACHD,EAAUC,EACV,MACF,IAAK,GACHD,EAAUC,EACV,MACF,IAAK,GAGL,IAAK,GACHD,EAAUC,EACV,MACF,IAAK,GACHD,EAAUC,EACV,MACF,IAAK,GACHD,EAAUC,EACV,MACF,IAAK,GACHD,EAAUC,EACV,MACF,QACED,EAAU,oBAGd,OACE,mBAAGF,UAAU,UAAb,SAAwBE,IAqBnBE,CAAqBX,GACtB,cAAC,IAAD,CAASY,GAAG,SAAZ,SACE,wBAAQL,UAAU,WAAWM,QAAS,SAACC,GAAD,OAjFvB,SAACA,GACxBA,EAAEC,iBACF,IAAMC,EAAa,CACjBrB,SAAUA,EACVE,KAAMA,EACNC,aAAcA,EACdC,MAAOA,EACPkB,IAAKrB,EACLI,cAAeA,GAEjBE,GAAa,GACbE,EAAYY,GAsEyCE,CAAiBJ,IAA9D,+BAPgClB,GAS3B,QCrFJuB,G,YAAO,SAAC,GAAmF,IAAjFC,EAAgF,EAAhFA,iBAAkBnB,EAA8D,EAA9DA,UAAWE,EAAmD,EAAnDA,OAAQkB,EAA2C,EAA3CA,kBAAmBhB,EAAwB,EAAxBA,kBAE7E,EAAgCiB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAWA,OAJAC,qBAAU,WACRJ,EAAkBE,MAIlB,kCACKpB,GAAWF,EAwBJ,KAvBV,iCACE,8CACA,yBAAQM,UAAU,WAAWmB,SAAU,SAACZ,GAAD,OAAOU,EAAYV,EAAEa,OAAOC,QAAnE,UACE,wBAAQA,MAAM,YAAYC,SAAO,IACjC,wBAAQD,MAAM,YAAd,uBACA,wBAAQA,MAAM,eAAd,wBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,yBAEF,mBAAGrB,UAAU,UAAb,kHACA,8BACE,cAAC,IAAD,CAASK,GAAE,YAAOP,EAAkBR,MAApC,SACE,wBACEA,KAAK,SACLU,UAAU,aACVM,QAAS,SAACC,GAAD,OAhCA,SAACA,GACpBA,EAAEC,iBACFK,EAAiBG,GA8BSO,CAAahB,IAH/B,mCCrCG,G,MAAA,IAA0B,sCCK5BiB,EAAS,SAAC,GAAkD,IAAhD7B,EAA+C,EAA/CA,aAAc8B,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBAuBhD,OACE,0BAAS1B,UAAU,SAAnB,UAEE,qBAAKA,UAAU,QAAf,SACE,cAAC,IAAD,CACIK,GAAG,QACHsB,MAAO,CAAEC,eAAgB,QACzBtB,QAAS,kBAjBjBmB,GAAU,QACV9B,GAAa,IAaT,SAKI,oBAAIK,UAAU,WAAd,iDAKN,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAASK,GAAG,SAAZ,SACE,wBAAQL,UAAU,YAAYM,QAAS,kBA/B7CX,GAAa,QACb8B,GAAU,IA8BJ,qBAGF,cAAC,IAAD,CAASpB,GAAG,YAAZ,SACE,wBAAQL,UAAU,eAAeM,QAAS,kBAzBhDmB,GAAU,GACV9B,GAAa,QACb+B,GAAgB,IAuBV,wBAGF,qBAAK1B,UAAU,WAAf,SACE,cAAC,IAAD,CAASK,GAAG,QAAZ,SACE,qBAAKwB,IAAKC,EAAUC,IAAI,UAAU/B,UAAU,YAAYM,QAAS,kBA7CzEX,GAAa,QACb8B,GAAU,iBCNDO,G,MAAQ,SAAC,GAA6F,IAA3FC,EAA0F,EAA1FA,eAAgBC,EAA0E,EAA1EA,iBAAkBC,EAAwD,EAAxDA,eAAoBC,GAAoC,EAAxC/C,GAAwC,EAApC+C,iBAAiBC,EAAmB,EAAnBA,aAE7FnB,qBAAU,WACRe,OAGF,IAAMK,EAAYF,EAAgBG,KAAI,SAAAnD,GACpC,OACE,sBAAKY,UAAU,aAAgCX,GAAID,EAASsB,IAA5D,UACE,+BAAKtB,EAASA,SAAd,OACA,2CAAcA,EAASE,QACvB,+CAAkBF,EAASG,gBACP,IAAnBH,EAASI,MAAc,sCAAe,mDAAuC,GAAjBJ,EAASI,OAAYS,QAAQ,MAC1F,wBAAQD,UAAU,eAAeM,QAAS,SAACC,GAAD,OAAO2B,EAAiB9C,EAASsB,MAA3E,sBACA,wBAAQV,UAAU,aAAaM,QAAS,SAACC,GAAD,OAAO4B,EAAe/C,EAASsB,MAAvE,sBAN+BtB,EAASsB,QAW9C,OACE,0BAASV,UAAU,QAAnB,UACI,qBAAKA,UAAU,gBAAf,SAC+B,IAA3BoC,EAAgBrC,QAAiBsC,EAAyF,KAAzE,qBAAKrC,UAAU,WAAf,SAA0B,oEAEjF,yBAASA,UAAU,aAAnB,SACGsC,SCzBIE,G,MAAW,SAAC,GAAmE,EAAjE7C,aAAiE,EAAnD8B,UAAmD,EAAxCY,aAAyC,IAA3BI,EAA0B,EAA1BA,oBAE1DC,EAAiBD,EAAoBF,KAAI,SAAAI,GAC7C,OACE,sBAAK3C,UAAU,iBAAmCX,GAAIsD,EAAK,GAAGjC,IAA9D,UACE,+BAAKiC,EAAK,GAAGvD,SAAb,OACA,gDAAmBuD,EAAK,GAAGC,iBACzB,2CAAcD,EAAK,GAAGrD,QACtB,+CAAkBqD,EAAK,GAAGpD,gBACP,IAAlBoD,EAAK,GAAGnD,MAAc,sCAAe,mDAAsC,GAAhBmD,EAAK,GAAGnD,OAAYS,QAAQ,QALvD0C,EAAK,GAAGjC,QAWjD,OACE,0BAASV,UAAU,WAAnB,UAEE,oBAAIA,UAAU,OAAd,iDAEA,kCACGyC,EAAoB1C,OACrB,yBAASC,UAAU,gBAAnB,SACG0C,IACU,mBAAG1C,UAAU,iBAAb,0F,gCC3Bf6C,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACGC,MAAM,wCAAD,OAAyCF,IADjD,cACdG,EADc,yBAEbC,EAAcD,IAFD,2CAAH,sDAKbC,EAAgB,SAACD,GACrB,GAAIA,EAASE,GAEX,OADAC,QAAQC,IAAIJ,GACLA,EAASK,OAEhB,MAAM,IAAIC,MAAM,gDCEPC,G,MAAM,WAEjB,MAAkCzC,oBAAS,GAA3C,mBAAOrB,EAAP,KAAkBC,EAAlB,KACA,EAA8CoB,mBAAS,IAAvD,mBAAOqB,EAAP,KAAwBqB,EAAxB,KACA,EAAsD1C,mBAAS,IAA/D,mBAAO0B,EAAP,KAA4BiB,EAA5B,KACA,EAAwC3C,oBAAS,GAAjD,mBAAOsB,EAAP,KAAqBX,EAArB,KACA,EAA4BX,oBAAS,GAArC,mBAAOnB,EAAP,KAAe6B,EAAf,KACA,EAA4CV,mBAAS,IAArD,mBAAO4C,EAAP,KAAuB7C,EAAvB,KACA,EAAkDC,mBAAS,IAA3D,mBAAOjB,EAAP,KAA0B8D,EAA1B,KACA,EAA0B7C,oBAAS,GAAnC,mBAAc8C,GAAd,WACA,EAA8B9C,oBAAS,GAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KAEMlD,EAAmB,SAAC8C,GACxB,IAAIK,EAEFA,OADqBC,IAAnBN,EACQ,GAEH,eAAWA,GAEpBd,EAAcmB,GACbE,MACC,SAACC,GACCP,EAAqBO,GACrBJ,GAAW,GACXtC,GAAU,MAGb2C,OAAM,SAAAC,GAAK,OAAIR,EAASQ,EAAMC,aAG3BzE,EAAc,SAAC0E,GACFnC,EAAgBoC,MAAK,SAAAC,GAAK,OAAIA,EAAM/D,MAAQ6D,EAAY7D,SAIzE+C,EAAmB,CAACc,GAAF,mBAAkBnC,KACpCwB,EAAqB,MAGjBzB,EAAiB,SAACzB,GACtB,IAAMgE,EAActC,EAAgBuC,QAAO,SAAAF,GAAK,OAAIA,EAAM/D,MAAQA,KAClE+C,EAAmBiB,IAGfE,EAAc,SAACC,GACnB,IAAMC,GAAe,IAAIC,MAAOC,WAAWC,MAAM,KACjDJ,EAAkB,GAAGjC,cAArB,UAAwCkC,EAAa,GAArD,YAA2DA,EAAa,GAAxE,YAA8EA,EAAa,GAA3F,YAAiGA,EAAa,GAA9G,eAAuHA,EAAa,KAGhI5C,EAAmB,SAACxB,GACxB,IAAMmE,EAAoBzC,EAAgBuC,QAAO,SAAAF,GAAK,OAAIA,EAAM/D,MAAQA,KACxE,IAAK+B,EAAoB1C,OAOvB,OANA6E,EAAYC,GACZnB,EAAuB,CAACmB,IACxB1C,EAAezB,GACfe,GAAU,GACV9B,GAAa,QACb+B,GAAgB,GAGlBkD,EAAYC,GACZnB,EAAuB,CAACmB,GAAF,mBAAwBpC,KAC9CN,EAAezB,GACfe,GAAU,GACV9B,GAAa,GACb+B,GAAgB,IAGZO,EAAiB,WACU,IAA3BG,EAAgBrC,SAClBJ,GAAa,GACb+B,GAAgB,KAIpB,OAEE,0BAAS1B,UAAU,MAAnB,UAGE,iCACE,cAAC,EAAD,CAAQN,UAAWA,EAAWC,aAAcA,EAAc8B,UAAWA,EAAWC,gBAAiBA,MAGnG,uBAAM1B,UAAU,MAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEkF,KAAK,QACLC,OAAQ,kBACN,cAAC,EAAD,CACEzF,UAAWA,EACXE,OAAQA,EACRiB,iBAAkBA,EAClBY,UAAWA,EACXX,kBAAmBA,EACnB6C,eAAgBA,EAChB7D,kBAAmBA,EACnBgE,QAASA,OAIf,cAAC,IAAD,CACEsB,OAAK,EAACF,KAAK,YACXC,OAAQ,kBACN,cAAC,EAAD,CACE1C,oBAAqBA,EACrBJ,aAAcA,EACdZ,UAAWA,EACX9B,aAAcA,OAIpB,cAAC,IAAD,CACEyF,OAAK,EAACF,KAAK,SACXC,OAAQ,kBACN,cAAC,EAAD,CACE9F,GAAIS,EAAkBY,IACtBwB,iBAAkBA,EAClBC,eAAgBA,EAChBC,gBAAiBA,EACjBzC,aAAcA,EACd0C,aAAcA,EACdJ,eAAgBA,UAOxB,cAAC,IAAD,CACEiD,KAAK,SACLC,OAAQ,kBACN,cAAC,EAAD,CACE9F,GAAIS,EAAkBY,IACtBtB,SAAUU,EAAkBV,SAC5BE,KAAMQ,EAAkBR,KACxBC,aAAcO,EAAkBP,aAChCC,MAAOM,EAAkBN,MACzBC,cAAeK,EAAkBL,cACjC2C,gBAAiBA,EACjB1C,UAAWA,EACXG,YAAaA,EACbD,OAAQA,EACRE,kBAAmBA,EACnBH,aAAcA,eCtJtB0F,EAAS,cAAC,IAAD,UAAe,cAAC,EAAD,MAE9BC,IAASH,OAAOE,EAAQE,SAASC,eAAe,W","file":"static/js/main.670a48de.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Activity.css';\n\nexport const Activity = ({ activity, id, type, participants, price, accessibility, savedView, setSavedView, search, sendToSaved, suggestedActivity }) => {\n\n  const saveActivityInfo = (e) => { \n    e.preventDefault()\n    const infoToSave = {\n      activity: activity, \n      type: type, \n      participants: participants, \n      price: price, \n      key: id,\n      accessibility: accessibility,\n    };\n    setSavedView(true);\n    sendToSaved(infoToSave)\n  }\n  \n  const displayAccessibility = (accessibility) => {\n    \n    let display;\n\n    const options = {\n      zero: 'Wow, this one would be easy!',\n      easy: 'Come on! You can probably make this happen if we\\'re being honest here...',\n      lessEasy: 'Maybe it\\'ll be productive, or warm someones heart. Go for it!',\n      medium: 'Do it for your country!',\n      hard: 'How bad do you want it?!',\n      difficult: 'This is something that should be in your Showcase!',\n      veryDifficult: 'If you do it, the masses will be inspired.'\n    }\n\n    switch (accessibility) {\n      case 0:\n        display = options.zero\n        break\n      case 0.2:\n        display = options.easy\n        break\n      case 0.3:\n        display = options.lessEasy\n        break\n      case 0.4:\n        display = options.medium\n        break\n      case 0.5:\n        display = options.medium\n        break\n      case 0.6:\n        display = options.hard\n        break\n      case 0.8:\n        display = options.difficult\n        break\n      case 0.9:\n        display = options.veryDifficult\n        break \n      default:\n        display = 'Go get em, tiger!' \n    }\n\n    return (\n      <p className='display'>{display}</p>\n    );\n  }\n\n  if (suggestedActivity.length === 0 && search) {\n    return (\n      <section className='now-go'>\n        <p className='now-go'>Now go complete a saved activity!</p>\n      </section>\n    );\n  }\n\n  return (\n    <section className='generated-activity'>\n        \n        {(search && !savedView) ? \n        <div className='activity-card' key={id}>\n          <h2 className='title'>{activity}!</h2>\n          <p className='category'>Category: {type}</p>\n          <p className='participants'>Participants: {participants}</p>\n          {price === 0 ? <p className='cost'>Estimated cost: FREE!</p> : <p className='cost'>Estimated cost: ${(price * 10).toFixed(2)}</p>}\n          {displayAccessibility(accessibility)}\n          <NavLink to='/:type'>\n            <button className='save-btn' onClick={(e) => saveActivityInfo(e)}>Save Activity</button>\n          </NavLink>\n        </div> : null\n        }\n        \n    </section>\n  );  \n}","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Form.css'\n\nexport const Form = ({ generateActivity, savedView, search, setSearchCategory, suggestedActivity }) => {\n\n  const [category, setCategory] = useState('');\n\n  const submitSearch = (e) => {\n    e.preventDefault();\n    generateActivity(category);\n  } \n  \n  useEffect(() => {\n    setSearchCategory(category)\n  })\n\n  return (\n    <section>\n      {(!search && !savedView) ?\n      <form>\n        <label>Category:</label>\n        <select className='activity' onChange={(e) => setCategory(e.target.value)}>\n          <option value='undefined' default ></option>\n          <option value='education'>Education</option>\n          <option value='recreational'>Recreation</option>\n          <option value='social'>Social</option>\n          <option value='diy'>DIY</option>\n          <option value='charity'>Charity</option>\n          <option value='cooking'>Cooking</option>\n          <option value='relaxation'>Relaxation</option>\n          <option value='music'>Music</option>\n          <option value='busywork'>Busywork</option>\n        </select>\n        <p className='warning'>WARNING: No category will result in a randomly generated activity which may be considered productive</p>\n        <div>\n          <NavLink to={`/:${suggestedActivity.type}`}>\n            <button \n              type='submit' \n              className='do-a-thing' \n              onClick={(e) => submitSearch(e)}>Do A Thing</button>\n          </NavLink>\n        </div>\n      </form> : null\n      }\n    </section>\n  );  \n}\n\n\n","export default __webpack_public_path__ + \"static/media/homeIcon.469b89df.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\nimport homeIcon from '../../images/homeIcon.svg';\n\nexport const Header = ({ setSavedView, setSearch, setShowcaseView }) => {\n\n  const changeViewToHome = () => {\n    setSavedView(false)\n    setSearch(false)\n  }\n\n  const changeViewToSaved = () => {\n    setSavedView(true);\n    setSearch(false);\n  }\n\n  const changeViewFromLogo = () => {\n    setSearch(false);\n    setSavedView(false);\n  }\n\n  const changeViewToShowcase = () => {\n    setSearch(false);\n    setSavedView(false);\n    setShowcaseView(true);\n  }\n\n  return (\n    <section className='header'>\n\n      <div className='title'> \n        <NavLink \n            to='/Home'\n            style={{ textDecoration: 'none' }}\n            onClick={() => changeViewFromLogo()}\n          >\n            <h1 className='app-name'>GET Un-Bored Activity Generator</h1>\n          </NavLink>\n      </div>\n\n\n      <div className='nav-btns'>\n        <NavLink to='/Saved'>\n          <button className='saved-btn' onClick={() => changeViewToSaved()}>Saved</button>\n        </NavLink>\n\n        <NavLink to='/Showcase'>\n          <button className='showcase-btn' onClick={() => changeViewToShowcase()}>Showcase</button>\n        </NavLink>\n        \n        <div className='home-img'>\n          <NavLink to='/Home'>\n            <img src={homeIcon} alt='Go Home' className='home-icon' onClick={() => changeViewToHome()} />\n          </NavLink>\n        </div>    \n      </div>\n\n    </section>\n  );\n}","import React, { useEffect } from 'react';\nimport './Saved.css';\n\nexport const Saved = ({ checkSavedView, completeActivity, deleteActivity, id, savedActivities, showcaseView }) => {\n\n  useEffect(() => {\n    checkSavedView()\n  })\n\n  const savedActs = savedActivities.map(activity => {\n    return (\n      <div className='saved-card' key={activity.key} id={activity.key}>\n        <h2>{activity.activity}!</h2>\n        <p>Category: {activity.type}</p>\n        <p>Participants: {activity.participants}</p>\n        {activity.price === 0 ? <p>FREE!</p> : <p>Estimated cost: ${(activity.price * 10).toFixed(2)}</p>}\n        <button className='complete-btn' onClick={(e) => completeActivity(activity.key)}>Complete</button>\n        <button className='delete-btn' onClick={(e) => deleteActivity(activity.key)}>Delete</button>\n      </div>\n    );\n  });\n\n  return (\n    <section className='saved'>\n        <div className='no-saved-text'>\n          {(savedActivities.length === 0 && !showcaseView) ? <div className='no-saved'><p>You have no saved activities...</p></div> : null }\n        </div>\n      <section className='saved-area'>\n        {savedActs}\n      </section>\n    </section>\n  );\n}","import React from 'react';\nimport './Showcase.css';\n\nexport const Showcase = ({ setSavedView, setSearch, showcaseView, showcasedActivities }) => {\n\n  const completedCards = showcasedActivities.map(card => {\n    return (\n      <div className='completed-card' key={card[0].key} id={card[0].key}>\n        <h2>{card[0].activity}!</h2>\n        <h3>Completed on: {card[0].dateCompleted}</h3>\n          <p>Category: {card[0].type}</p>\n          <p>Participants: {card[0].participants}</p>\n          {card[0].price === 0 ? <p>FREE!</p> : <p>Estimated cost: ${(card[0].price * 10).toFixed(2)}</p>}\n      </div>\n    )\n  });\n\n\n  return (\n    <section className='showcase'>\n\n      <h3 className='head'>Showcase Your Completed Activities!</h3>\n        \n      <section>\n        {showcasedActivities.length ?\n        <section className='showcase-area'>    \n          {completedCards}   \n        </section> : <p className='nothing-to-see'>Nothing to see here 😳 Generate an activity to get started!</p> \n        }\n      </section>\n\n    </section>\n  );\n\n}","const fetchActivity = async (endpoint) => {\n  const response = await fetch(`http://www.boredapi.com/api/activity?${endpoint}`)\n  return checkForError(response);\n}\n\nconst checkForError = (response) => {\n  if (response.ok) {\n    console.log(response)\n    return response.json()  \n  } else {\n    throw new Error('UH OH! Something has gone horribly wrong!!!')\n  }\n}\n\nexport { fetchActivity } ","import React, { useState } from 'react'\nimport { Activity } from '../Activity/Activity';\nimport { Error } from '../Error/Error';\nimport { Form } from '../Form/Form';\nimport { Header } from '../Header/Header';\nimport { Saved } from '../Saved/Saved'\nimport { Showcase } from '../Showcase/Showcase';\nimport { Route, Switch } from 'react-router-dom';\nimport { fetchActivity } from '../../apiCalls';\nimport './App.css';\n\n\nexport const App = () => {\n\n  const [savedView, setSavedView] = useState(false);\n  const [savedActivities, setSavedActivities] = useState([]);\n  const [showcasedActivities, setShowcasedActivities] = useState([]);\n  const [showcaseView, setShowcaseView] = useState(false);\n  const [search, setSearch] = useState(false);\n  const [searchCategory, setSearchCategory] = useState('')\n  const [suggestedActivity, setSuggestedActivity] = useState('');\n  const [error, setError] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const generateActivity = (searchCategory) => {\n    let endpath;\n    if (searchCategory === undefined) {\n      endpath = ''\n    } else {\n      endpath = `type=${searchCategory}`\n    }\n    fetchActivity(endpath)\n    .then(\n      (activityData) => {\n        setSuggestedActivity(activityData)\n        setLoading(false)\n        setSearch(true)\n      },\n    )\n    .catch(error => setError(error.message))\n  }\n\n  const sendToSaved = (newActivity) => {\n    const included = savedActivities.find(saved => saved.key === newActivity.key)\n    if (included) {\n      return;\n    } \n    setSavedActivities([newActivity, ...savedActivities]);\n    setSuggestedActivity([]); \n  }\n\n  const deleteActivity = (key) => {\n    const newSavedArr = savedActivities.filter(saved => saved.key !== key);\n    setSavedActivities(newSavedArr);\n  }\n\n  const convertDate = (completedActivity) => {\n    const dateToFormat = new Date().toString().split(' ')\n    completedActivity[0].dateCompleted = `${dateToFormat[0]} ${dateToFormat[1]} ${dateToFormat[2]} ${dateToFormat[3]} at ${dateToFormat[4]}`\n  }\n\n  const completeActivity = (key) => {\n    const completedActivity = savedActivities.filter(saved => saved.key === key);\n    if (!showcasedActivities.length) {\n      convertDate(completedActivity)\n      setShowcasedActivities([completedActivity])\n      deleteActivity(key)\n      setSearch(false)\n      setSavedView(false)\n      setShowcaseView(true)\n      return\n    }\n    convertDate(completedActivity)\n    setShowcasedActivities([completedActivity, ...showcasedActivities])\n    deleteActivity(key)\n    setSearch(false)\n    setSavedView(false)  \n    setShowcaseView(true)\n  }\n\n  const checkSavedView = () => {\n    if (savedActivities.length === 0) {\n      setSavedView(true)\n      setShowcaseView(false)\n    }\n  }\n\n  return (  \n\n    <section className='App'>\n\n    \n      <header>\n        <Header savedView={savedView} setSavedView={setSavedView} setSearch={setSearch} setShowcaseView={setShowcaseView} /> \n      </header>\n      \n      <main className=\"App\">\n        <Switch>\n          <Route \n            path='/Home' \n            render={() => \n              <Form\n                savedView={savedView} \n                search={search} \n                generateActivity={generateActivity} \n                setSearch={setSearch} \n                setSearchCategory={setSearchCategory} \n                searchCategory={searchCategory}\n                suggestedActivity={suggestedActivity}\n                loading={loading}\n              />\n            }\n          />\n          <Route\n            exact path='/Showcase'\n            render={() => \n              <Showcase\n                showcasedActivities={showcasedActivities} \n                showcaseView={showcaseView}\n                setSearch={setSearch}\n                setSavedView={setSavedView}\n              />\n            } \n          />\n          <Route\n            exact path='/Saved' \n            render={() => \n              <Saved\n                id={suggestedActivity.key}\n                completeActivity={completeActivity}\n                deleteActivity={deleteActivity} \n                savedActivities={savedActivities}\n                setSavedView={setSavedView}\n                showcaseView={showcaseView}\n                checkSavedView={checkSavedView}\n              />\n            } \n          />\n          {/* <Route component={Error}/>   */}\n        </Switch>\n{/* working route without url changing */}\n        <Route\n          path='/:type'\n          render={() => \n            <Activity\n              id={suggestedActivity.key} \n              activity={suggestedActivity.activity} \n              type={suggestedActivity.type} \n              participants={suggestedActivity.participants} \n              price={suggestedActivity.price} \n              accessibility={suggestedActivity.accessibility}\n              savedActivities={savedActivities}\n              savedView={savedView} \n              sendToSaved={sendToSaved}\n              search={search}\n              suggestedActivity={suggestedActivity}\n              setSavedView={setSavedView}\n            />\n          }\n        />\n    </main>\n  </section>\n    );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = <BrowserRouter><App /></BrowserRouter>;\n\nReactDOM.render(router, document.getElementById('root'));\n\n"],"sourceRoot":""}